{"version":3,"file":"static/js/519.fd0366f3.chunk.js","mappings":"sMAkEA,UA7De,SAAC,GAA2B,EAA1BA,UAA2B,IAAhBC,EAAe,EAAfA,UACtBC,GAAWC,EAAAA,EAAAA,MACfD,EAAWA,EAASE,SAASC,MAAM,KACnC,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAyCC,EAAAA,EAAAA,MAAzC,eAAOC,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,SAACZ,GAAaA,GAAY,GACpC,IA8CA,OArCAY,EAAAA,EAAAA,YAAU,WACLF,EAAaG,WAAWR,MAAM,KAAK,KACtCS,EAAAA,EAAAA,GAAYJ,EAAaG,WAAWR,MAAM,KAAK,IAAIU,MAAK,SAAAC,GAAG,OAAIR,EAAYQ,EAAIC,KAAKC,QAAzB,GAE5D,GAAC,CAACR,KAkCD,2BAhCF,SAAcR,GACZ,GAAIiB,MAAMC,QAAQlB,IAAaA,EAASmB,OAAS,EAC/C,OACE,kBAAMC,SAAU,SAAAC,GAAG,OAhBV,SAAAA,GACbA,EAAIC,iBACJ,IAAIC,EAAQF,EAAIG,OAAOC,SAASC,MAAMH,MACtCd,EAAgB,CAAEkB,MAAOJ,IACzBxB,EAAUwB,EACX,CAW4BK,CAAOP,EAAX,EAAnB,WACE,kBAAOQ,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,sBAIP,CAwBIE,CAAK/B,GAtBV,SAAgBK,GACd,GAAIY,MAAMC,QAAQb,GAChB,OAAIA,EAASc,QAIT,wBACEd,EAAS2B,KAAI,SAAAC,GACX,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAIE,IAAzB,SAAgCF,EAAIG,SAD7BH,EAAIE,GAIhB,OAVG,qDAeb,CAKIE,CAAOhC,KAGb,C","sources":["components/page/Movies.jsx"],"sourcesContent":["import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { searchInApi } from '../getFromApi';\nimport { Link } from 'react-router-dom';\n\nconst Movies = ({setMovies, setSearch}) => {\n  let location = useLocation();\n  location = location.pathname.split('/');\n  const [response, setResponse] = useState('');\n  const [searchParams , setSearchParams] = useSearchParams();\n\n  useEffect((setMovies)=>{setMovies()},\n  [])\n\n  const search = evt => {\n    evt.preventDefault();\n    let value = evt.target.elements.input.value;\n    setSearchParams({ query: value });\n    setSearch(value);\n  }\n\n  useEffect(()=>{\n    if(searchParams.toString().split('=')[1]){\n    searchInApi(searchParams.toString().split('=')[1]).then(res => setResponse(res.data.results));\n    }\n  },[searchParams])\n\n  function form(location) {\n    if (Array.isArray(location) && location.length < 3) {\n      return (\n        <form onSubmit={evt => search(evt)}>\n          <input type=\"text\" name=\"input\"></input>\n          <button type=\"submit\">Search</button>\n        </form>\n      );\n    }\n  }\n\n  function render(response) {\n    if (Array.isArray(response)) {\n      if(!response.length){\n        return( <p>We have no matching movies</p>)\n      }else{\n        return(\n          <ul>{\n            response.map(ele => {\n              return (\n                <li key={ele.id}>\n                  <Link to={`/movies/${ele.id}`}>{ele.title}</Link>\n                </li>\n              );\n            })\n          }</ul>\n        )\n      }\n    }\n  }\n\n  return (\n    <div>\n      {form(location)}\n      {render(response)}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["setMovies","setSearch","location","useLocation","pathname","split","useState","response","setResponse","useSearchParams","searchParams","setSearchParams","useEffect","toString","searchInApi","then","res","data","results","Array","isArray","length","onSubmit","evt","preventDefault","value","target","elements","input","query","search","type","name","form","map","ele","to","id","title","render"],"sourceRoot":""}
{"version":3,"file":"static/js/224.f1014877.chunk.js","mappings":"sMAkEA,UA5DqB,WACnB,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACIC,GAAWC,EAAAA,EAAAA,MAiCf,OAhCAD,EAAWA,EAASE,SAASC,MAAM,MAEnCC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAW,WAAD,OAAYL,EAAS,KAAMM,MAAK,SAAAR,GACxCC,EAAYD,EAASS,KACtB,GACF,GAAE,CAACP,KA2BF,2BAnBF,SAAeF,GACb,YAA6BU,IAAzBV,EAASW,aAAsD,OAAzBX,EAASW,aAE/C,gBACEC,IAAK,aAAeZ,EAASa,eAC7BC,IAAK,kCAAoCd,EAASW,eAKpD,gBACEC,IAAK,aACLE,IAAK,qEAIZ,CAIIC,CAAMf,IACP,4BACE,wBAAKA,EAASa,kBACd,0BACE,6CACCb,EAASgB,iBAEZ,sCACA,uBAAIhB,EAASiB,YACb,oCACA,wBApCN,SAAoBC,GAClB,GAAIC,MAAMC,QAAQF,GAChB,OAAOA,EAAIG,KAAI,SAAAC,GAAO,OAAI,wBAAsBA,EAAQC,MAArBD,EAAQE,GAArB,GAEzB,CAgCUC,CAAWzB,EAAS0B,cAE3B,8CACA,SAAC,KAAD,CAAMC,GAAG,OAAT,mBACA,iCACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,EAAAC,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/page/MovieDetails.jsx"],"sourcesContent":["import { Outlet, Link } from 'react-router-dom';\nimport { getFromApi } from '../getFromApi';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const [response, setResponse] = useState([]);\n  let location = useLocation();\n  location = location.pathname.split('/');\n\n  useEffect(() => {\n    getFromApi(`3/movie/${location[2]}`).then(response => {\n      setResponse(response.data);\n    });\n  }, [location]);\n\n  function checkArray(arr) {\n    if (Array.isArray(arr)) {\n      return arr.map(element => <li key={element.id}>{element.name}</li>);\n    }\n  }\n\n  function image(response) {\n    if (response.poster_path !== undefined && response.poster_path !== null) {\n      return (\n        <img\n          alt={'poster of ' + response.original_title}\n          src={`https://image.tmdb.org/t/p/w300` + response.poster_path}\n        />\n      );\n    } else {\n      return (\n        <img\n          alt={'substitute'}\n          src={'https://upload.wikimedia.org/wikipedia/en/1/1b/NPC_wojak_meme.png'}\n        />\n      );\n    }\n  }\n\n  return (\n    <div>\n      {image(response)}\n      <div>\n        <h2>{response.original_title}</h2>\n        <p>\n          <span>Vote average: </span>\n          {response.vote_average}\n        </p>\n        <h3>Overview</h3>\n        <p>{response.overview}</p>\n        <h3>Genres</h3>\n        <ul>{checkArray(response.genres)}</ul>\n      </div>\n      <p> More information</p>\n      <Link to=\"cast\">Cast</Link>\n      <span> </span>\n      <Link to=\"reviews\">Reviews</Link>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","response","setResponse","location","useLocation","pathname","split","useEffect","getFromApi","then","data","undefined","poster_path","alt","original_title","src","image","vote_average","overview","arr","Array","isArray","map","element","name","id","checkArray","genres","to","Suspense","fallback"],"sourceRoot":""}